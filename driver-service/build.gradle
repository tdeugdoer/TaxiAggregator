plugins {
    id 'java'
    id 'org.springframework.boot' version "${springBootVersion}"
    id 'io.spring.dependency-management' version "${springDependencyManagementVersion}"
    id "com.ewerk.gradle.plugins.querydsl" version "${ewerkVersion}"
    id 'org.springframework.cloud.contract' version "${springContractVersion}"
    id 'maven-publish'
}

jar {
    manifest {
        attributes(
                'Main-Class': 'com.tserashkevich.driverservice.DriverServiceApplication'
        )
    }
}

configurations {
    querydsl.extendsFrom annotationProcessor, implementation
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation "org.springframework.cloud:spring-cloud-starter-openfeign"
    implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j'
    implementation 'org.springframework.kafka:spring-kafka'
    implementation 'io.projectreactor:reactor-core:3.6.11'

    implementation 'org.liquibase:liquibase-core'
    runtimeOnly 'org.postgresql:postgresql'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

    implementation "com.querydsl:querydsl-jpa:${querydslVersion}:jakarta"
    annotationProcessor "com.querydsl:querydsl-apt:${querydslVersion}:jakarta"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api:${jakartaPersistenceApiVersion}"

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation "io.rest-assured:rest-assured:${restAssuredVersion}"
    testImplementation 'org.testcontainers:postgresql'
    testImplementation "org.springframework.cloud:spring-cloud-contract-spec"
    testImplementation "org.springframework.cloud:spring-cloud-starter-contract-verifier"
    testImplementation "org.springframework.cloud:spring-cloud-starter-contract-stub-runner"
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

querydsl {
    querydslDefault = true
    library = "com.querydsl:querydsl-apt:${querydslVersion}:jakarta"
    querydslSourcesDir = "build/generated/sources/annotationProcessor/java/main"
}

compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
    options.failOnError = false
}

tasks.named('test') {
    useJUnitPlatform()
}

contracts {
    testFramework = "JUNIT5"
    baseClassForTests = 'com.tserashkevich.driverservice.contract.ContractBaseTest'
    contractsDslDir = file("src/test/resources/contracts")
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java

            groupId = 'com.tserashkevich'
            artifactId = 'driver-service'
            version = '0.0.1-SNAPSHOT'

            artifact verifierStubsJar
        }
    }
}